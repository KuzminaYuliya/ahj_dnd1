!function(t){var e={};function s(r){if(e[r])return e[r].exports;var o=e[r]={i:r,l:!1,exports:{}};return t[r].call(o.exports,o,o.exports,s),o.l=!0,o.exports}s.m=t,s.c=e,s.d=function(t,e,r){s.o(t,e)||Object.defineProperty(t,e,{enumerable:!0,get:r})},s.r=function(t){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})},s.t=function(t,e){if(1&e&&(t=s(t)),8&e)return t;if(4&e&&"object"==typeof t&&t&&t.__esModule)return t;var r=Object.create(null);if(s.r(r),Object.defineProperty(r,"default",{enumerable:!0,value:t}),2&e&&"string"!=typeof t)for(var o in t)s.d(r,o,function(e){return t[e]}.bind(null,o));return r},s.n=function(t){var e=t&&t.__esModule?function(){return t.default}:function(){return t};return s.d(e,"a",e),e},s.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},s.p="",s(s.s=1)}([function(t,e,s){},function(t,e,s){"use strict";s.r(e);s(0);class r{static save(t){localStorage.setItem("cards",JSON.stringify(t))}static load(){return localStorage.getItem("cards")}}(new class{constructor(){this.container=document.querySelector(".cards-wrapper"),this.todoList=document.getElementById("todo").querySelector(".cards"),this.progressList=document.getElementById("progress").querySelector(".cards"),this.doneList=document.getElementById("done").querySelector(".cards"),this.forms=Array.from(document.forms),this.parent=null,this.draggedEl=null,this.ghostEl=null,this.topDiff=null,this.leftDiff=null}action(){document.addEventListener("DOMContentLoaded",()=>{this.load()}),this.container.addEventListener("mousedown",t=>{if(t.target.classList.contains("add-card")){const e=t.target.parentElement.querySelector(".card-form");e.classList.contains("card-form-active")||e.classList.add("card-form-active")}else if(t.target.classList.contains("cancel-button")){t.preventDefault();const e=t.target.closest(".card-form");e.reset(),e.classList.remove("card-form-active")}else if(t.target.classList.contains("delete-button-active")){t.preventDefault();const e=t.target.parentElement;t.target.closest(".cards").removeChild(e),this.save()}else if(t.target.classList.contains("card-item")){t.preventDefault(),t.target.querySelector(".delete-button").classList.remove("delete-button-active"),t.target.classList.remove("card-item-active"),this.draggedEl=t.target,this.ghostEl=t.target.cloneNode(!0),this.ghostEl.classList.add("dragged"),document.body.appendChild(this.ghostEl),document.body.style.cursor="grabbing",this.ghostEl.style.width=`${this.draggedEl.offsetWidth}px`;const{top:e,left:s}=this.draggedEl.getBoundingClientRect();this.topDiff=t.pageY-e,this.leftDiff=t.pageX-s,this.ghostEl.style.left=`${s}px`,this.ghostEl.style.top=`${e}px`}}),this.container.addEventListener("mouseover",t=>{if(t.preventDefault(),!this.draggedEl&&t.target.classList.contains("card-item")){const e=t.target;e.classList.add("card-item-active"),e.querySelector(".delete-button").classList.add("delete-button-active")}}),this.container.addEventListener("mouseout",t=>{if(t.preventDefault(),t.target.classList.contains("card-item")&&!t.relatedTarget.classList.contains("delete-button")){const e=t.target;e.classList.remove("card-item-active"),e.querySelector(".delete-button").classList.remove("delete-button-active")}}),this.container.addEventListener("mousemove",t=>{t.preventDefault(),this.draggedEl&&(this.ghostEl.style.left=`${t.pageX-this.leftDiff}px`,this.ghostEl.style.top=`${t.pageY-this.topDiff}px`)}),this.container.addEventListener("mouseup",t=>{if(this.draggedEl){const e=document.elementFromPoint(t.clientX,t.clientY),{top:s}=e.getBoundingClientRect(),r=e.closest(".cards");r&&r!==e?(t.pageY>window.scrollY+s+e.offsetHeight/2?r.insertBefore(this.draggedEl,e.nextElementSibling):r.insertBefore(this.draggedEl,e),this.stopMove(),this.save()):r?(r.appendChild(this.draggedEl),this.stopMove(),this.save()):(this.stopMove(),this.save())}}),this.forms.forEach(t=>{t.addEventListener("submit",e=>{e.preventDefault();const s=e.currentTarget.checkValidity(),r=[...t.elements][0];if(s){const e=t.closest(".cards-column").querySelector(".cards");this.addCard(e,r.value),t.reset(),t.classList.remove("card-form-active"),this.save()}})})}addCard(t,e){this.parent=t;const s=document.createElement("div");s.className="card-item",s.innerHTML=`${e} <span class='delete-button'>✕</span>`,this.parent.appendChild(s)}save(){const t=this.todoList.querySelectorAll(".card-item"),e=this.progressList.querySelectorAll(".card-item"),s=this.doneList.querySelectorAll(".card-item"),o={todo:[],progress:[],done:[]};t.forEach(t=>{o.todo.push(t.textContent.replace(" ✕",""))}),e.forEach(t=>{o.progress.push(t.textContent.replace(" ✕",""))}),s.forEach(t=>{o.done.push(t.textContent.replace(" ✕",""))}),r.save(o)}load(){const t=JSON.parse(r.load());t&&(t.todo.forEach(t=>{this.addCard(this.todoList,t)}),t.progress.forEach(t=>{this.addCard(this.progressList,t)}),t.done.forEach(t=>{this.addCard(this.doneList,t)}))}stopMove(){document.body.removeChild(this.ghostEl),document.body.style.cursor="auto",this.ghostEl=null,this.draggedEl=null}}).action()}]);
//# sourceMappingURL=main.js.map